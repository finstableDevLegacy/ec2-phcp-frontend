/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Admin, AdminInterface } from "../Admin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rootAdmin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "isAdmin",
        type: "uint256",
      },
    ],
    name: "AdminUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldRoot",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newRoot",
        type: "address",
      },
    ],
    name: "RootAdminChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRootAdmin",
        type: "address",
      },
    ],
    name: "changeRootAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rootAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516103e83803806103e883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610355806100936000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806358d642e81161005057806358d642e8146100b457806366eb463f146100df57806370480275146100f257600080fd5b80631785f53c1461006c57806324d7806c14610081575b600080fd5b61007f61007a3660046102ef565b610105565b005b6100a161008f3660046102ef565b60016020526000908152604090205481565b6040519081526020015b60405180910390f35b6000546100c7906001600160a01b031681565b6040516001600160a01b0390911681526020016100ab565b61007f6100ed3660046102ef565b6101a1565b61007f6101003660046102ef565b610258565b6000546001600160a01b031633146101595760405162461bcd60e51b815260206004820152601260248201527136bab9ba103132903937b7ba1030b236b4b760711b60448201526064015b60405180910390fd5b6001600160a01b038116600081815260016020526040808220829055519091907fabfafa62f2f183eb8fe4ae2293ed2d954001a6a345c459031f171dedad91824e908390a350565b6000546001600160a01b031633146101f05760405162461bcd60e51b815260206004820152601260248201527136bab9ba103132903937b7ba1030b236b4b760711b6044820152606401610150565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917fb87f74f9bf2ee13b23c1f12b079998e1a4468f43938c42aa57503cf768a017f99190a35050565b6000546001600160a01b031633146102a75760405162461bcd60e51b815260206004820152601260248201527136bab9ba103132903937b7ba1030b236b4b760711b6044820152606401610150565b6001600160a01b0381166000818152600160208190526040808320829055519092917fabfafa62f2f183eb8fe4ae2293ed2d954001a6a345c459031f171dedad91824e91a350565b60006020828403121561030157600080fd5b81356001600160a01b038116811461031857600080fd5b939250505056fea26469706673582212203fb381711e0938ccc8af52a04569d9ecc1c934db09a4f05ef25fb8a10bec039f64736f6c634300080b0033";

export class Admin__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rootAdmin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Admin> {
    return super.deploy(_rootAdmin, overrides || {}) as Promise<Admin>;
  }
  getDeployTransaction(
    _rootAdmin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rootAdmin, overrides || {});
  }
  attach(address: string): Admin {
    return super.attach(address) as Admin;
  }
  connect(signer: Signer): Admin__factory {
    return super.connect(signer) as Admin__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdminInterface {
    return new utils.Interface(_abi) as AdminInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Admin {
    return new Contract(address, _abi, signerOrProvider) as Admin;
  }
}
